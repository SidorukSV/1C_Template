#Область ПрограммныйИнтерфейс

// Возвращает значение в любом случае(в т.ч. пустое).
//
// Параметры:
// ИмяНастройки - Строка - имя предопределенных данных из Справочник.бит_НастройкиУчета.
// СообщитьОНезаполненном - Булево - если Истина, Сообщает пользователю "Настрока учета " + Наименование + " - не заполнена.".
// Отказ - Булево - выходной параметр, устанавливается в значение Истина, 
//					если параметр СообщитьОНезаполненном = Истина и Значение настройки не заполнено, иначе не используется.
//
// Возвращаемое значение:
// - Произвольный - реквизит Значение предопределенной настройки
Функция ПолучитьПростуюНастройкуУчета(ИмяНастройки, СообщитьОНезаполненном = Ложь, Отказ = Ложь) Экспорт

	Значение = ПолучитьРеквизитНастройкиУчета(ИмяНастройки, "Значение", СообщитьОНезаполненном = Ложь, Отказ = Ложь);

	Возврат Значение;
КонецФункции

// Возвращает значение в любом случае(в т.ч. пустое).
//
// Параметры:
// ИмяНастройки - Строка - имя предопределенных данных из Справочник.бит_НастройкиУчета.
// Тип - Строка - может принимать значения ТаблицаЗначений, Массив, Соответствие
// СообщитьОНезаполненном - Булево - если Истина, Сообщает пользователю "Настрока учета " + Наименование + " - не заполнена.".
// Отказ - Булево - выходной параметр, устанавливается в значение Истина, 
//					если параметр СообщитьОНезаполненном = Истина и Значение настройки не заполнено, иначе не используется.
//
// Возвращаемое значение:
// - Массив, ТаблицаЗначений - выгруженная табличная часть Значения предопределенной настройки
Функция ПолучитьТабличнуюНастройкуУчета(ИмяНастройки, Тип = "ТаблицаЗначений", СообщитьОНезаполненном = Ложь, Отказ = Ложь) Экспорт

	Значения = ПолучитьРеквизитНастройкиУчета(ИмяНастройки, "Значения", СообщитьОНезаполненном = Ложь, Отказ = Ложь);
	
	ТаблицаЗначения = Значения.Выгрузить();
	
	Если Тип = "Массив" Тогда
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаЗначения);
	ИначеЕсли Тип = "Соответствие" Тогда
		соот = Новый Соответствие;
		Для Каждого Строка Из ТаблицаЗначения Цикл
			соот.Вставить(Строка.Ключ, Строка.Значение);
		КонецЦикла;
		Возврат соот;
	Иначе
		Возврат Значения;
	КонецЕсли;
	
КонецФункции

// Возвращает значение заданного реквизита в любом случае(в т.ч. пустое).
//
// Параметры:
// ИмяНастройки - Строка - имя предопределенных данных из Справочник.бит_НастройкиУчета.
// Реквизит - Строка - имя реквизита, значение которого нужно вернуть
// СообщитьОНезаполненном - Булево - если Истина, Сообщает пользователю "Настрока учета " + Наименование + " - не заполнена.".
// Отказ - Булево - выходной параметр, устанавливается в значение Истина, 
//					если параметр СообщитьОНезаполненном = Истина и Значение настройки не заполнено, иначе не используется.
//
// Возвращаемое значение:
// - Произвольный - значение заданного реквизита предопределенной настройки
Функция ПолучитьРеквизитНастройкиУчета(ИмяНастройки, Реквизит, СообщитьОНезаполненном = Ложь, Отказ = Ложь) Экспорт
	
	Настройка = Справочники.бит_НастройкиУчета[ИмяНастройки];
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Настройка, "Наименование, " + Реквизит);

	Если СообщитьОНезаполненном Тогда
		ПроверитьЗаполнениеНастройки(Реквизиты.Наименование, Реквизиты[Реквизит], Отказ);
	КонецЕсли;		

	Возврат Реквизиты[Реквизит];

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Служебная процедура, которая проверяет заполнение параметра Значение, и выводит сообщение пользователю.
//
// Параметры:
// НаименованиеНастройки - Строка - наименование настройки учета.
// Значение - Произвольный - проверяемое значение
// Отказ - Булево - выходной параметр, устанавливается в значение Истина, 
//					если параметр СообщитьОНезаполненном = Истина и Значение настройки не заполнено, иначе не используется.
Процедура ПроверитьЗаполнениеНастройки(НаименованиеНастройки, Значение, Отказ = Истина)
	
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Настройка учета " + НаименованиеНастройки + " - не заполнена.", Отказ);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
