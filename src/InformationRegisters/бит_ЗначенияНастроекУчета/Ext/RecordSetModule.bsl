#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Или МобильноеПриложениеСервер Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	бг_СинхронизироватьРегламентныеЗаданияПередЗаписью();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	бг_СинхронизироватьРегламентныеЗаданияПриЗаписи(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура бг_СинхронизироватьРегламентныеЗаданияПередЗаписью()
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		Константа = Запись.Константа;
		ИдентификаторКонстанты = "";
		Если ЗначениеЗаполнено(Константа) Тогда
			ИдентификаторКонстанты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Константа, "Идентификатор");
		КонецЕсли;
		Если СтрСравнить(ИдентификаторКонстанты, "АвтоматическиПроводитьБанковскиеДокументы") = 0 Тогда
			ДополнительныеСвойства.Вставить("СинхронизироватьРегламентныеЗадания");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура бг_СинхронизироватьРегламентныеЗаданияПриЗаписи(Отказ)
	
	Если Не Отказ
		И ДополнительныеСвойства.Свойство("СинхронизироватьРегламентныеЗадания") Тогда
		бг_РегламентныеЗадания.СинхронизироватьРегламентныеЗаданияПроведенияБанковскихДокументов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли